[
  {
    "type": "function",
    "name": "initNexus",
    "inputs": [
      {
        "name": "validators",
        "type": "tuple[]",
        "internalType": "struct BootstrapConfig[]",
        "components": [
          {
            "name": "module",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "data",
            "type": "bytes",
            "internalType": "bytes"
          }
        ]
      },
      {
        "name": "executors",
        "type": "tuple[]",
        "internalType": "struct BootstrapConfig[]",
        "components": [
          {
            "name": "module",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "data",
            "type": "bytes",
            "internalType": "bytes"
          }
        ]
      },
      {
        "name": "hook",
        "type": "tuple",
        "internalType": "struct BootstrapConfig",
        "components": [
          {
            "name": "module",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "data",
            "type": "bytes",
            "internalType": "bytes"
          }
        ]
      },
      {
        "name": "fallbacks",
        "type": "tuple[]",
        "internalType": "struct BootstrapConfig[]",
        "components": [
          {
            "name": "module",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "data",
            "type": "bytes",
            "internalType": "bytes"
          }
        ]
      },
      {
        "name": "registry",
        "type": "address",
        "internalType": "contract IERC7484"
      },
      {
        "name": "attesters",
        "type": "address[]",
        "internalType": "address[]"
      },
      {
        "name": "threshold",
        "type": "uint8",
        "internalType": "uint8"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  }
]