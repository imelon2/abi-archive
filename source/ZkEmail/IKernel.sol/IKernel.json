{"abi":[{"type":"function","name":"_toWrappedHash","inputs":[{"name":"hash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"accountId","inputs":[],"outputs":[{"name":"accountImplementationId","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"execute","inputs":[{"name":"execMode","type":"bytes32","internalType":"ExecMode"},{"name":"executionCalldata","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"executeFromExecutor","inputs":[{"name":"execMode","type":"bytes32","internalType":"ExecMode"},{"name":"executionCalldata","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"payable"},{"type":"function","name":"executeUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"initialize","inputs":[{"name":"_rootValidator","type":"bytes21","internalType":"ValidationId"},{"name":"hook","type":"address","internalType":"contract IHook"},{"name":"validatorData","type":"bytes","internalType":"bytes"},{"name":"hookData","type":"bytes","internalType":"bytes"},{"name":"initConfig","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"installModule","inputs":[{"name":"moduleType","type":"uint256","internalType":"uint256"},{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"installValidations","inputs":[{"name":"vIds","type":"bytes21[]","internalType":"ValidationId[]"},{"name":"configs","type":"tuple[]","internalType":"struct ValidationConfig[]","components":[{"name":"nonce","type":"uint32","internalType":"uint32"},{"name":"hook","type":"address","internalType":"contract IHook"}]},{"name":"validationData","type":"bytes[]","internalType":"bytes[]"},{"name":"hookData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"invalidateNonce","inputs":[{"name":"nonce","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"isAllowedSelector","inputs":[{"name":"vId","type":"bytes21","internalType":"ValidationId"},{"name":"selector","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isModuleInstalled","inputs":[{"name":"moduleType","type":"uint256","internalType":"uint256"},{"name":"module","type":"address","internalType":"address"},{"name":"additionalContext","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isValidSignature","inputs":[{"name":"hash","type":"bytes32","internalType":"bytes32"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"onERC1155BatchReceived","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"pure"},{"type":"function","name":"onERC1155Received","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"pure"},{"type":"function","name":"onERC721Received","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"pure"},{"type":"function","name":"supportsExecutionMode","inputs":[{"name":"mode","type":"bytes32","internalType":"ExecMode"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"supportsModule","inputs":[{"name":"moduleTypeId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"uninstallModule","inputs":[{"name":"moduleType","type":"uint256","internalType":"uint256"},{"name":"module","type":"address","internalType":"address"},{"name":"deInitData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"uninstallValidation","inputs":[{"name":"vId","type":"bytes21","internalType":"ValidationId"},{"name":"deinitData","type":"bytes","internalType":"bytes"},{"name":"hookDeinitData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"upgradeTo","inputs":[{"name":"_newImplementation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"validateUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"},{"name":"missingAccountFunds","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"validationData","type":"uint256","internalType":"ValidationData"}],"stateMutability":"payable"},{"type":"function","name":"validationConfig","inputs":[{"name":"vId","type":"bytes21","internalType":"ValidationId"}],"outputs":[{"name":"","type":"tuple","internalType":"struct ValidationConfig","components":[{"name":"nonce","type":"uint32","internalType":"uint32"},{"name":"hook","type":"address","internalType":"contract IHook"}]}],"stateMutability":"view"},{"type":"event","name":"ModuleInstalled","inputs":[{"name":"moduleTypeId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"module","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ModuleUninstalled","inputs":[{"name":"moduleTypeId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"module","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"_toWrappedHash(bytes32)":"303d9c74","accountId()":"9cfd7cff","execute(bytes32,bytes)":"e9ae5c53","executeFromExecutor(bytes32,bytes)":"d691c964","executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":"8dd7712f","initialize(bytes21,address,bytes,bytes,bytes[])":"3c3b752b","installModule(uint256,address,bytes)":"9517e29f","installValidations(bytes21[],(uint32,address)[],bytes[],bytes[])":"9198bdf5","invalidateNonce(uint32)":"1f1b92e3","isAllowedSelector(bytes21,bytes4)":"6e6fa0c6","isModuleInstalled(uint256,address,bytes)":"112d3a7d","isValidSignature(bytes32,bytes)":"1626ba7e","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","supportsExecutionMode(bytes32)":"d03c7914","supportsModule(uint256)":"f2dc691d","uninstallModule(uint256,address,bytes)":"a71763a8","uninstallValidation(bytes21,bytes,bytes)":"e6f3d50a","upgradeTo(address)":"3659cfe6","validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c","validationConfig(bytes21)":"b8afe17d"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleInstalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleUninstalled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"_toWrappedHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accountId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"accountImplementationId\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ExecMode\",\"name\":\"execMode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"executionCalldata\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ExecMode\",\"name\":\"execMode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"executionCalldata\",\"type\":\"bytes\"}],\"name\":\"executeFromExecutor\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"}],\"name\":\"executeUserOp\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ValidationId\",\"name\":\"_rootValidator\",\"type\":\"bytes21\"},{\"internalType\":\"contract IHook\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"validatorData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"initConfig\",\"type\":\"bytes[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"name\":\"installModule\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ValidationId[]\",\"name\":\"vIds\",\"type\":\"bytes21[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"contract IHook\",\"name\":\"hook\",\"type\":\"address\"}],\"internalType\":\"struct ValidationConfig[]\",\"name\":\"configs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"validationData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"hookData\",\"type\":\"bytes[]\"}],\"name\":\"installValidations\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"invalidateNonce\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ValidationId\",\"name\":\"vId\",\"type\":\"bytes21\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"isAllowedSelector\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalContext\",\"type\":\"bytes\"}],\"name\":\"isModuleInstalled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ExecMode\",\"name\":\"mode\",\"type\":\"bytes32\"}],\"name\":\"supportsExecutionMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"}],\"name\":\"supportsModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"deInitData\",\"type\":\"bytes\"}],\"name\":\"uninstallModule\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ValidationId\",\"name\":\"vId\",\"type\":\"bytes21\"},{\"internalType\":\"bytes\",\"name\":\"deinitData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"hookDeinitData\",\"type\":\"bytes\"}],\"name\":\"uninstallValidation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"ValidationData\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ValidationId\",\"name\":\"vId\",\"type\":\"bytes21\"}],\"name\":\"validationConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"contract IHook\",\"name\":\"hook\",\"type\":\"address\"}],\"internalType\":\"struct ValidationConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accountId()\":{\"details\":\"Returns the account id of the smart account\",\"returns\":{\"accountImplementationId\":\"the account id of the smart account the accountId should be structured like so:        \\\"vendorname.accountname.semver\\\"\"}},\"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)\":{\"params\":{\"userOp\":\"- The operation that was just validated.\",\"userOpHash\":\"- Hash of the user's request data.\"}},\"supportsModule(uint256)\":{\"params\":{\"moduleTypeId\":\"the module type ID according the ERC-7579 spec\"}},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"authorizer\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \\\"indefinite\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)\":{\"notice\":\"Account may implement this execute method. passing this methodSig at the beginning of callData will cause the entryPoint to pass the full UserOp (and hash) to the account. The account should skip the methodSig, and use the callData (and optionally, other UserOp fields)\"},\"supportsModule(uint256)\":{\"notice\":\"Function to check if the account supports installation of a certain module type Id\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IKernel.sol\":\"IKernel\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC4337/=node_modules/@ERC4337/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@matterlabs/zksync-contracts/l2/contracts/=src/libraries/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/math/=node_modules/@prb/math/src/\",\":@rhinestone/=node_modules/@rhinestone/\",\":@safe-global/=node_modules/@safe-global/\",\":@zk-email/contracts/=node_modules/@zk-email/contracts/\",\":@zk-email/ether-email-auth-contracts/=node_modules/@zk-email/ether-email-auth-contracts/\",\":ExcessivelySafeCall/=node_modules/excessively-safe-call/src/\",\":account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":erc7579/interfaces/=node_modules/@rhinestone/modulekit/src/accounts/common/interfaces/\",\":excessively-safe-call/=node_modules/excessively-safe-call/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":kernel/=node_modules/@zerodev/kernel/src/\",\":module-bases/=node_modules/@rhinestone/module-bases/src/\",\":modulekit/=node_modules/@rhinestone/modulekit/src/\",\":safe7579/=node_modules/@rhinestone/safe7579/src/\",\":sentinellist/=node_modules/@rhinestone/sentinellist/src/\",\":solady/=node_modules/solady/src/\",\":solarray/=node_modules/solarray/src/\",\":solidity-stringutils/=node_modules/solidity-stringutils/\"]},\"sources\":{\"node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"node_modules/@rhinestone/modulekit/src/accounts/common/interfaces/IERC7579Module.sol\":{\"keccak256\":\"0xfee8bc6130ac2cbbdb3c5d28c2d9bc4611959039e7b63b4d089478446e07c70e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7656b57b1e9ab7c4ccde15ce2ffcf8d556cde092a12895a5ecb96b7108342bb2\",\"dweb:/ipfs/QmVx5pMfXULEgHb7iHgodwWLKEbEbQrPYLV6zE75rpsy5M\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IAccount.sol\":{\"keccak256\":\"0x7d2a702e520c64226b5a71f816e2a42890d2b33057c4e4cd22db51ea2a4ff8a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cedae8e5534f076856be39e87b6385cebe78ae8b3332b7141435a2010f633693\",\"dweb:/ipfs/QmPjELeuRyp11BCg1ft5qmJmEbW4Xw2pHSG1ui1v4qjTSL\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IAccountExecute.sol\":{\"keccak256\":\"0xd4e8a2927bedf1f7dfedbcf6f279ff4cc82f94537086e6f98a72cc116dd1664e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e98119b104ebd8025fe378b248b4555d52c4a548b16e2eea3796e528c3ebb6b\",\"dweb:/ipfs/QmeN4ZKfEDKMZhpp95RvBhwH1fTGZfA3Va1p12pVqBfNmz\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IERC7579Account.sol\":{\"keccak256\":\"0xe1f8633b798b52b860bc9d9b53bba51df98d7ab1f8d3a84764c895c64668d88a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b281bf2c2abdf0c37d58c95750fd0830bd21a9f0964bac445c7da8bb7dddcc22\",\"dweb:/ipfs/QmR5NYRUfRgS6UY5rUEiF6aptFdem9TyFTySfNe64sm7W4\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IERC7579Module.sol\":{\"keccak256\":\"0xa1c377d62389362ad9c95f60e34c7863662faf879f85bddacafa6a9e0a8fdb55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0a74d4d2dbe03689bdfb2f919ffb68b63353f90e34151ee2600a84743b492ec\",\"dweb:/ipfs/QmddDqRcquUo2HiuyJBGZmGtNKGpG8TNXo4hND3SmQcUgf\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IKernel.sol\":{\"keccak256\":\"0xe67702a3788ff2bd05d881a25ce1781db2938486eacec96f2bae96eb36554111\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://630bf060707db25ce5cb7b85707a558241f810b14efd651ef0f323921c948839\",\"dweb:/ipfs/QmRFMfb6JsbeA24dYuiQPXKDkLo8ZJv9MrboNoj382AsPQ\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/lib/ExecLib.sol\":{\"keccak256\":\"0x3de3d5b0dda068cefbf37bddb257bed24d61e6c9a03931616ea9308fc650ec75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e106b2b433f226b455a511b03f54b993ad8b15697b2096016908171ff13db54e\",\"dweb:/ipfs/QmZ5J3cUFhwnRgTZajdQ75dmkm9QhA64WTvoqLb9AsAofD\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/lib/ValidationTypeLib.sol\":{\"keccak256\":\"0xf98c56ca86d5e620eea3a55ffcb54691c44fc40cfff4e3f38a06c07aa7d97869\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6103a58fec4db280443b2446671f6058e34f3cd505471c4f76134d274d761a10\",\"dweb:/ipfs/QmXMYdQXYb9E8kabxHHzRMaj1kXZJ9oAQJmfyXPVqqNUDP\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/types/Constants.sol\":{\"keccak256\":\"0xb384c482c30fa887c4eb5637266e11992ba5dd8971b51005aecbd48cf7af1e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ffb786e664749a4904a75543c1f2f8f2ca2de11a3e83a0ab08d1e3ebf024366\",\"dweb:/ipfs/QmYq2YiEcYDNCVoY1iGeRKFce6Bdebjc4c2tG6vnp51Tk8\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/types/Structs.sol\":{\"keccak256\":\"0x6090c666443a4c66faf1ff73aceca8d4ca794583d39f572622978513599e50a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81b0d0aaf922fe6cb3e9a3fce10366c58f9e980bc3407bec39cc9e66180974e7\",\"dweb:/ipfs/QmYJHy9dQTg5Epm7eRuafaQFu8z7Pg3aGPoemHJTAqRreB\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/types/Types.sol\":{\"keccak256\":\"0x6c7dc1dade8c24d366bf8f5a7a378c54a9383202a117454fc6d1642f58236b82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71573bc69c15a77afff7d15eac274553c26dd88452755d0ef80131936baf27b5\",\"dweb:/ipfs/QmQm9o5Dga2PVHcXuqEqB7nG8dwGnU3y9KCs8BuCQGp1U9\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256","indexed":false},{"internalType":"address","name":"module","type":"address","indexed":false}],"type":"event","name":"ModuleInstalled","anonymous":false},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256","indexed":false},{"internalType":"address","name":"module","type":"address","indexed":false}],"type":"event","name":"ModuleUninstalled","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"_toWrappedHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"accountId","outputs":[{"internalType":"string","name":"accountImplementationId","type":"string"}]},{"inputs":[{"internalType":"ExecMode","name":"execMode","type":"bytes32"},{"internalType":"bytes","name":"executionCalldata","type":"bytes"}],"stateMutability":"payable","type":"function","name":"execute"},{"inputs":[{"internalType":"ExecMode","name":"execMode","type":"bytes32"},{"internalType":"bytes","name":"executionCalldata","type":"bytes"}],"stateMutability":"payable","type":"function","name":"executeFromExecutor","outputs":[{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}]},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"executeUserOp"},{"inputs":[{"internalType":"ValidationId","name":"_rootValidator","type":"bytes21"},{"internalType":"contract IHook","name":"hook","type":"address"},{"internalType":"bytes","name":"validatorData","type":"bytes"},{"internalType":"bytes","name":"hookData","type":"bytes"},{"internalType":"bytes[]","name":"initConfig","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"uint256","name":"moduleType","type":"uint256"},{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}],"stateMutability":"payable","type":"function","name":"installModule"},{"inputs":[{"internalType":"ValidationId[]","name":"vIds","type":"bytes21[]"},{"internalType":"struct ValidationConfig[]","name":"configs","type":"tuple[]","components":[{"internalType":"uint32","name":"nonce","type":"uint32"},{"internalType":"contract IHook","name":"hook","type":"address"}]},{"internalType":"bytes[]","name":"validationData","type":"bytes[]"},{"internalType":"bytes[]","name":"hookData","type":"bytes[]"}],"stateMutability":"payable","type":"function","name":"installValidations"},{"inputs":[{"internalType":"uint32","name":"nonce","type":"uint32"}],"stateMutability":"payable","type":"function","name":"invalidateNonce"},{"inputs":[{"internalType":"ValidationId","name":"vId","type":"bytes21"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"view","type":"function","name":"isAllowedSelector","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"moduleType","type":"uint256"},{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"additionalContext","type":"bytes"}],"stateMutability":"view","type":"function","name":"isModuleInstalled","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"view","type":"function","name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function","name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function","name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function","name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"ExecMode","name":"mode","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"supportsExecutionMode","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"}],"stateMutability":"pure","type":"function","name":"supportsModule","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"moduleType","type":"uint256"},{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"deInitData","type":"bytes"}],"stateMutability":"payable","type":"function","name":"uninstallModule"},{"inputs":[{"internalType":"ValidationId","name":"vId","type":"bytes21"},{"internalType":"bytes","name":"deinitData","type":"bytes"},{"internalType":"bytes","name":"hookDeinitData","type":"bytes"}],"stateMutability":"payable","type":"function","name":"uninstallValidation"},{"inputs":[{"internalType":"address","name":"_newImplementation","type":"address"}],"stateMutability":"payable","type":"function","name":"upgradeTo"},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"stateMutability":"payable","type":"function","name":"validateUserOp","outputs":[{"internalType":"ValidationData","name":"validationData","type":"uint256"}]},{"inputs":[{"internalType":"ValidationId","name":"vId","type":"bytes21"}],"stateMutability":"view","type":"function","name":"validationConfig","outputs":[{"internalType":"struct ValidationConfig","name":"","type":"tuple","components":[{"internalType":"uint32","name":"nonce","type":"uint32"},{"internalType":"contract IHook","name":"hook","type":"address"}]}]}],"devdoc":{"kind":"dev","methods":{"accountId()":{"details":"Returns the account id of the smart account","returns":{"accountImplementationId":"the account id of the smart account the accountId should be structured like so:        \"vendorname.accountname.semver\""}},"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":{"params":{"userOp":"- The operation that was just validated.","userOpHash":"- Hash of the user's request data."}},"supportsModule(uint256)":{"params":{"moduleTypeId":"the module type ID according the ERC-7579 spec"}},"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"details":"Must validate caller is the entryPoint.      Must validate the signature and nonce","params":{"missingAccountFunds":"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.","userOp":"- The operation that is about to be executed.","userOpHash":"- Hash of the user's request data. can be used as the basis for signature."},"returns":{"validationData":"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \"authorizer\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly."}}},"version":1},"userdoc":{"kind":"user","methods":{"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":{"notice":"Account may implement this execute method. passing this methodSig at the beginning of callData will cause the entryPoint to pass the full UserOp (and hash) to the account. The account should skip the methodSig, and use the callData (and optionally, other UserOp fields)"},"supportsModule(uint256)":{"notice":"Function to check if the account supports installation of a certain module type Id"},"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"notice":"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."}},"version":1}},"settings":{"remappings":["@ERC4337/=node_modules/@ERC4337/","@gnosis.pm/=node_modules/@gnosis.pm/","@matterlabs/zksync-contracts/l2/contracts/=src/libraries/","@openzeppelin/=node_modules/@openzeppelin/","@prb/math/=node_modules/@prb/math/src/","@rhinestone/=node_modules/@rhinestone/","@safe-global/=node_modules/@safe-global/","@zk-email/contracts/=node_modules/@zk-email/contracts/","@zk-email/ether-email-auth-contracts/=node_modules/@zk-email/ether-email-auth-contracts/","ExcessivelySafeCall/=node_modules/excessively-safe-call/src/","account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/","account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/","ds-test/=node_modules/ds-test/src/","erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/","erc7579/interfaces/=node_modules/@rhinestone/modulekit/src/accounts/common/interfaces/","excessively-safe-call/=node_modules/excessively-safe-call/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","kernel/=node_modules/@zerodev/kernel/src/","module-bases/=node_modules/@rhinestone/module-bases/src/","modulekit/=node_modules/@rhinestone/modulekit/src/","safe7579/=node_modules/@rhinestone/safe7579/src/","sentinellist/=node_modules/@rhinestone/sentinellist/src/","solady/=node_modules/solady/src/","solarray/=node_modules/solarray/src/","solidity-stringutils/=node_modules/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IKernel.sol":"IKernel"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol":{"keccak256":"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6","urls":["bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e","dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"],"license":"GPL-3.0"},"node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol":{"keccak256":"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b","urls":["bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc","dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"],"license":"GPL-3.0"},"node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"node_modules/@rhinestone/modulekit/src/accounts/common/interfaces/IERC7579Module.sol":{"keccak256":"0xfee8bc6130ac2cbbdb3c5d28c2d9bc4611959039e7b63b4d089478446e07c70e","urls":["bzz-raw://7656b57b1e9ab7c4ccde15ce2ffcf8d556cde092a12895a5ecb96b7108342bb2","dweb:/ipfs/QmVx5pMfXULEgHb7iHgodwWLKEbEbQrPYLV6zE75rpsy5M"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IAccount.sol":{"keccak256":"0x7d2a702e520c64226b5a71f816e2a42890d2b33057c4e4cd22db51ea2a4ff8a1","urls":["bzz-raw://cedae8e5534f076856be39e87b6385cebe78ae8b3332b7141435a2010f633693","dweb:/ipfs/QmPjELeuRyp11BCg1ft5qmJmEbW4Xw2pHSG1ui1v4qjTSL"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IAccountExecute.sol":{"keccak256":"0xd4e8a2927bedf1f7dfedbcf6f279ff4cc82f94537086e6f98a72cc116dd1664e","urls":["bzz-raw://4e98119b104ebd8025fe378b248b4555d52c4a548b16e2eea3796e528c3ebb6b","dweb:/ipfs/QmeN4ZKfEDKMZhpp95RvBhwH1fTGZfA3Va1p12pVqBfNmz"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IERC7579Account.sol":{"keccak256":"0xe1f8633b798b52b860bc9d9b53bba51df98d7ab1f8d3a84764c895c64668d88a","urls":["bzz-raw://b281bf2c2abdf0c37d58c95750fd0830bd21a9f0964bac445c7da8bb7dddcc22","dweb:/ipfs/QmR5NYRUfRgS6UY5rUEiF6aptFdem9TyFTySfNe64sm7W4"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IERC7579Module.sol":{"keccak256":"0xa1c377d62389362ad9c95f60e34c7863662faf879f85bddacafa6a9e0a8fdb55","urls":["bzz-raw://c0a74d4d2dbe03689bdfb2f919ffb68b63353f90e34151ee2600a84743b492ec","dweb:/ipfs/QmddDqRcquUo2HiuyJBGZmGtNKGpG8TNXo4hND3SmQcUgf"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IKernel.sol":{"keccak256":"0xe67702a3788ff2bd05d881a25ce1781db2938486eacec96f2bae96eb36554111","urls":["bzz-raw://630bf060707db25ce5cb7b85707a558241f810b14efd651ef0f323921c948839","dweb:/ipfs/QmRFMfb6JsbeA24dYuiQPXKDkLo8ZJv9MrboNoj382AsPQ"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/lib/ExecLib.sol":{"keccak256":"0x3de3d5b0dda068cefbf37bddb257bed24d61e6c9a03931616ea9308fc650ec75","urls":["bzz-raw://e106b2b433f226b455a511b03f54b993ad8b15697b2096016908171ff13db54e","dweb:/ipfs/QmZ5J3cUFhwnRgTZajdQ75dmkm9QhA64WTvoqLb9AsAofD"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/lib/ValidationTypeLib.sol":{"keccak256":"0xf98c56ca86d5e620eea3a55ffcb54691c44fc40cfff4e3f38a06c07aa7d97869","urls":["bzz-raw://6103a58fec4db280443b2446671f6058e34f3cd505471c4f76134d274d761a10","dweb:/ipfs/QmXMYdQXYb9E8kabxHHzRMaj1kXZJ9oAQJmfyXPVqqNUDP"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/types/Constants.sol":{"keccak256":"0xb384c482c30fa887c4eb5637266e11992ba5dd8971b51005aecbd48cf7af1e02","urls":["bzz-raw://1ffb786e664749a4904a75543c1f2f8f2ca2de11a3e83a0ab08d1e3ebf024366","dweb:/ipfs/QmYq2YiEcYDNCVoY1iGeRKFce6Bdebjc4c2tG6vnp51Tk8"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/types/Structs.sol":{"keccak256":"0x6090c666443a4c66faf1ff73aceca8d4ca794583d39f572622978513599e50a0","urls":["bzz-raw://81b0d0aaf922fe6cb3e9a3fce10366c58f9e980bc3407bec39cc9e66180974e7","dweb:/ipfs/QmYJHy9dQTg5Epm7eRuafaQFu8z7Pg3aGPoemHJTAqRreB"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/types/Types.sol":{"keccak256":"0x6c7dc1dade8c24d366bf8f5a7a378c54a9383202a117454fc6d1642f58236b82","urls":["bzz-raw://71573bc69c15a77afff7d15eac274553c26dd88452755d0ef80131936baf27b5","dweb:/ipfs/QmQm9o5Dga2PVHcXuqEqB7nG8dwGnU3y9KCs8BuCQGp1U9"],"license":"MIT"}},"version":1},"id":113}