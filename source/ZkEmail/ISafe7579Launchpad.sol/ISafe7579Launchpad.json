{"abi":[{"type":"function","name":"addSafe7579","inputs":[{"name":"safe7579","type":"address","internalType":"address"},{"name":"validators","type":"tuple[]","internalType":"struct ModuleInit[]","components":[{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"}]},{"name":"executors","type":"tuple[]","internalType":"struct ModuleInit[]","components":[{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"}]},{"name":"fallbacks","type":"tuple[]","internalType":"struct ModuleInit[]","components":[{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"}]},{"name":"hooks","type":"tuple[]","internalType":"struct ModuleInit[]","components":[{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"}]},{"name":"attesters","type":"address[]","internalType":"address[]"},{"name":"threshold","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getInitHash","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"hash","inputs":[{"name":"data","type":"tuple","internalType":"struct ISafe7579Launchpad.InitData","components":[{"name":"singleton","type":"address","internalType":"address"},{"name":"owners","type":"address[]","internalType":"address[]"},{"name":"threshold","type":"uint256","internalType":"uint256"},{"name":"setupTo","type":"address","internalType":"address"},{"name":"setupData","type":"bytes","internalType":"bytes"},{"name":"safe7579","type":"address","internalType":"contract ISafe7579"},{"name":"validators","type":"tuple[]","internalType":"struct ModuleInit[]","components":[{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"}]},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"initSafe7579","inputs":[{"name":"safe7579","type":"address","internalType":"address"},{"name":"executors","type":"tuple[]","internalType":"struct ModuleInit[]","components":[{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"}]},{"name":"fallbacks","type":"tuple[]","internalType":"struct ModuleInit[]","components":[{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"}]},{"name":"hooks","type":"tuple[]","internalType":"struct ModuleInit[]","components":[{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"}]},{"name":"attesters","type":"address[]","internalType":"address[]"},{"name":"threshold","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"preValidationSetup","inputs":[{"name":"initHash","type":"bytes32","internalType":"bytes32"},{"name":"to","type":"address","internalType":"address"},{"name":"preInit","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"predictSafeAddress","inputs":[{"name":"singleton","type":"address","internalType":"address"},{"name":"safeProxyFactory","type":"address","internalType":"address"},{"name":"creationCode","type":"bytes","internalType":"bytes"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"factoryInitializer","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"safeProxy","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"setupSafe","inputs":[{"name":"initData","type":"tuple","internalType":"struct ISafe7579Launchpad.InitData","components":[{"name":"singleton","type":"address","internalType":"address"},{"name":"owners","type":"address[]","internalType":"address[]"},{"name":"threshold","type":"uint256","internalType":"uint256"},{"name":"setupTo","type":"address","internalType":"address"},{"name":"setupData","type":"bytes","internalType":"bytes"},{"name":"safe7579","type":"address","internalType":"contract ISafe7579"},{"name":"validators","type":"tuple[]","internalType":"struct ModuleInit[]","components":[{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"}]},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validateUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"},{"name":"missingAccountFunds","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"validationData","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)":"d78343d9","getInitHash()":"3c9de1b8","hash((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))":"928107f9","initSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)":"15cca638","preValidationSetup(bytes32,address,bytes)":"4fff40e1","predictSafeAddress(address,address,bytes,bytes32,bytes)":"663c87d8","setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))":"d9ed0e8f","validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"executors\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"fallbacks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"hooks\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"addSafe7579\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInitHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"setupTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"setupData\",\"type\":\"bytes\"},{\"internalType\":\"contract ISafe7579\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISafe7579Launchpad.InitData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"executors\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"fallbacks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"hooks\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"initSafe7579\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"initHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"preInit\",\"type\":\"bytes\"}],\"name\":\"preValidationSetup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"safeProxyFactory\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"factoryInitializer\",\"type\":\"bytes\"}],\"name\":\"predictSafeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"safeProxy\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"setupTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"setupData\",\"type\":\"bytes\"},{\"internalType\":\"contract ISafe7579\",\"name\":\"safe7579\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISafe7579Launchpad.InitData\",\"name\":\"initData\",\"type\":\"tuple\"}],\"name\":\"setupSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"preValidationSetup(bytes32,address,bytes)\":{\"params\":{\"initHash\":\"will be calculated offchain using this.hash(InitData)\",\"preInit\":\"optional parameter for a delegatecall\",\"to\":\"optional parameter for a delegatecall\"}},\"predictSafeAddress(address,address,bytes,bytes32,bytes)\":{\"details\":\"factoryInitializer is expected to be: abi.encodeCall(Safe7579Launchpad.preValidationSetup, (initHash, to, callData));\"},\"setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))\":{\"params\":{\"initData\":\"initData to initialize the Safe and Safe7579 Adapter\"}},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"missingAccountFunds\":\"amount of gas that has to be paid\",\"userOp\":\"EntryPoint v0.7 userOp.\",\"userOpHash\":\"hash of userOp\"},\"returns\":{\"validationData\":\"4337 packed validation data returned by the validator module\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)\":{\"notice\":\"This function allows existing safe accounts to add the Safe7579 adapter to their account\"},\"hash((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))\":{\"notice\":\"Create unique InitData hash. Using all params but excluding data.callData from hash\"},\"initSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)\":{\"notice\":\"This function is intended to be delegatecalled by the ISafe.setup function. It configures the Safe7579 for the user for all module types except validators, which were initialized in the validateUserOp function.\"},\"preValidationSetup(bytes32,address,bytes)\":{\"notice\":\"SafeProxyFactory will create a SafeProxy and using this contract as the singleton implementation and call this function to initialize the account. will write initHash into SafeProxy storage\"},\"predictSafeAddress(address,address,bytes,bytes32,bytes)\":{\"notice\":\"Helper function that can be used offchain to predict the counterfactual Safe address.\"},\"setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))\":{\"notice\":\"During the execution phase of ERC4337, this function upgrades the SafeProxy to the actual SafeSingleton implementation. Subsequently, it invokes the ISafe.setup() function to initialize the Safe Account. The setup() function should ensure the completion of Safe7579 Adapter initialization with InitData.setupTo as address(this) and InitData.setupData encoding the call to this.initSafe7579(). SafeProxy.setup() delegatecalls this function to install executors, fallbacks, hooks, and registry configurations on the Safe7579 adapter. As this occurs in the ERC4337 execution phase, storage restrictions are not applicable.\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Upon creation of SafeProxy by SafeProxyFactory, EntryPoint invokes this function to verify the transaction. It ensures that only this.setupSafe() can be called by EntryPoint during execution. The function validates the hash of InitData in userOp.callData against the hash stored in preValidationSetup. This function abides by ERC4337 storage restrictions, allowing Safe7579 adapter initialization only in Validation Modules compliant with 4337. It installs validators from InitData onto the Safe7579 adapter for the account. When called by EP, the SafeProxy singleton address remains unupgraded to SafeSingleton, preventing execTransactionFromModule by Safe7579 Adapter. Initialization of Validator Modules is achieved through a direct call to onInstall(). This delegatecalled function initializes the Validator Module with the correct msg.sender. Once all validator modules are set up, they can be used to validate the userOp. Parameters include userOp (EntryPoint v0.7 userOp), userOpHash, and missingAccountFunds representing the gas payment required.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@rhinestone/modulekit/src/accounts/safe/interfaces/ISafe7579Launchpad.sol\":\"ISafe7579Launchpad\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC4337/=node_modules/@ERC4337/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@matterlabs/zksync-contracts/l2/contracts/=src/libraries/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/math/=node_modules/@prb/math/src/\",\":@rhinestone/=node_modules/@rhinestone/\",\":@safe-global/=node_modules/@safe-global/\",\":@zk-email/contracts/=node_modules/@zk-email/contracts/\",\":@zk-email/ether-email-auth-contracts/=node_modules/@zk-email/ether-email-auth-contracts/\",\":ExcessivelySafeCall/=node_modules/excessively-safe-call/src/\",\":account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":erc7579/interfaces/=node_modules/@rhinestone/modulekit/src/accounts/common/interfaces/\",\":excessively-safe-call/=node_modules/excessively-safe-call/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":kernel/=node_modules/@zerodev/kernel/src/\",\":module-bases/=node_modules/@rhinestone/module-bases/src/\",\":modulekit/=node_modules/@rhinestone/modulekit/src/\",\":safe7579/=node_modules/@rhinestone/safe7579/src/\",\":sentinellist/=node_modules/@rhinestone/sentinellist/src/\",\":solady/=node_modules/solady/src/\",\":solarray/=node_modules/solarray/src/\",\":solidity-stringutils/=node_modules/solidity-stringutils/\"]},\"sources\":{\"node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"node_modules/@ERC4337/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"node_modules/@rhinestone/modulekit/src/accounts/common/lib/ModeLib.sol\":{\"keccak256\":\"0x11b48cd992efe381edabe7fd70b8e9dc61e4eae683c696c44f37b625582d712a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5ba56d9bdba0f616da1728ceb19e4f34a3c085f46bfae413e297ab664d9a46e9\",\"dweb:/ipfs/QmbSXxis2vsCHupcBHv6hj5YHcqdQcrcmT73fNSqxrmGmN\"]},\"node_modules/@rhinestone/modulekit/src/accounts/safe/interfaces/IERC7484.sol\":{\"keccak256\":\"0xacf332c3c672c5c1947a7a7c39fca446e0ba64f2ac0bfc5bcbf97d77e34427b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52b112abaab9ee6c56ee9fba5d0bb7c6abab9dbd982d73c862190505a5902f41\",\"dweb:/ipfs/QmbMc8vC22e6VptN93uhWzwPzfQKP4YPxF8cenbyq6pgwh\"]},\"node_modules/@rhinestone/modulekit/src/accounts/safe/interfaces/IERC7579Account.sol\":{\"keccak256\":\"0x32647b05e94b0557537cdf7edc2c9bc1815aa8f0c2b9470f4db2e29e92ab900c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47bb8a7fca994d3d28dab436286bdc09775b3f11e7b1a41603b5cba3b4a814f3\",\"dweb:/ipfs/QmSJtdJtdf7ExceoCxtfZf69kHP5u7D2amqEAV4LcSQCHX\"]},\"node_modules/@rhinestone/modulekit/src/accounts/safe/interfaces/ISafe7579.sol\":{\"keccak256\":\"0x65ef20c762c094070cfde8ca51953a6d34c96f85d110aa669e9ef69c8832d5e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22a4f39137373d1cbc0a54cbcfd5e718dd43167add81484e72dc85bb0ed66a60\",\"dweb:/ipfs/QmbLZhWyJFdLBezGefuuh6TfXnjqjcbEvJeezLFMDB1Hme\"]},\"node_modules/@rhinestone/modulekit/src/accounts/safe/interfaces/ISafe7579Launchpad.sol\":{\"keccak256\":\"0xe90a3d78dd4f8983a7835d176305767f24a4ad237941ffb1625407f7c021d1c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48d12766a997aad0bdbf40cdd49756dc4c8e5d91b2fbd3b50a3bde7a9c9a6248\",\"dweb:/ipfs/QmQZH5o2m1PXJ1vUqVZogm9wf18xkWhhbV9dNPZArhGoQB\"]},\"node_modules/@rhinestone/modulekit/src/accounts/safe/interfaces/ISafeOp.sol\":{\"keccak256\":\"0xbab5eac7ab373dbd3b74d8aac065bc3f6986b167e10493475f8c6928b86c5901\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f83e8024578281f8041529206bcf44986df935cb04a7e21bcf2bd52146f665ab\",\"dweb:/ipfs/QmVqEQdbeHzcZ6XSLY685KieU2yFkzdgfqHXeef6xSxy5u\"]},\"node_modules/@rhinestone/modulekit/src/accounts/safe/types/DataTypes.sol\":{\"keccak256\":\"0x01c25fcd1319c086c59bf4fe694b2013a09910ae981bec97d7bbc78932497ca3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0e8a519326d00db216249c463ba8828632c15126b7ca5a52298b09e5a462d1f\",\"dweb:/ipfs/QmTDQJghirhS25hh9Ub4VVaX8cTi4GtPT6sDZq6cABUwuY\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"safe7579","type":"address"},{"internalType":"struct ModuleInit[]","name":"validators","type":"tuple[]","components":[{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}]},{"internalType":"struct ModuleInit[]","name":"executors","type":"tuple[]","components":[{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}]},{"internalType":"struct ModuleInit[]","name":"fallbacks","type":"tuple[]","components":[{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}]},{"internalType":"struct ModuleInit[]","name":"hooks","type":"tuple[]","components":[{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}]},{"internalType":"address[]","name":"attesters","type":"address[]"},{"internalType":"uint8","name":"threshold","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"addSafe7579"},{"inputs":[],"stateMutability":"view","type":"function","name":"getInitHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct ISafe7579Launchpad.InitData","name":"data","type":"tuple","components":[{"internalType":"address","name":"singleton","type":"address"},{"internalType":"address[]","name":"owners","type":"address[]"},{"internalType":"uint256","name":"threshold","type":"uint256"},{"internalType":"address","name":"setupTo","type":"address"},{"internalType":"bytes","name":"setupData","type":"bytes"},{"internalType":"contract ISafe7579","name":"safe7579","type":"address"},{"internalType":"struct ModuleInit[]","name":"validators","type":"tuple[]","components":[{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}]},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"hash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"safe7579","type":"address"},{"internalType":"struct ModuleInit[]","name":"executors","type":"tuple[]","components":[{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}]},{"internalType":"struct ModuleInit[]","name":"fallbacks","type":"tuple[]","components":[{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}]},{"internalType":"struct ModuleInit[]","name":"hooks","type":"tuple[]","components":[{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}]},{"internalType":"address[]","name":"attesters","type":"address[]"},{"internalType":"uint8","name":"threshold","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"initSafe7579"},{"inputs":[{"internalType":"bytes32","name":"initHash","type":"bytes32"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"preInit","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"preValidationSetup"},{"inputs":[{"internalType":"address","name":"singleton","type":"address"},{"internalType":"address","name":"safeProxyFactory","type":"address"},{"internalType":"bytes","name":"creationCode","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"factoryInitializer","type":"bytes"}],"stateMutability":"pure","type":"function","name":"predictSafeAddress","outputs":[{"internalType":"address","name":"safeProxy","type":"address"}]},{"inputs":[{"internalType":"struct ISafe7579Launchpad.InitData","name":"initData","type":"tuple","components":[{"internalType":"address","name":"singleton","type":"address"},{"internalType":"address[]","name":"owners","type":"address[]"},{"internalType":"uint256","name":"threshold","type":"uint256"},{"internalType":"address","name":"setupTo","type":"address"},{"internalType":"bytes","name":"setupData","type":"bytes"},{"internalType":"contract ISafe7579","name":"safe7579","type":"address"},{"internalType":"struct ModuleInit[]","name":"validators","type":"tuple[]","components":[{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}]},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"setupSafe"},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"preValidationSetup(bytes32,address,bytes)":{"params":{"initHash":"will be calculated offchain using this.hash(InitData)","preInit":"optional parameter for a delegatecall","to":"optional parameter for a delegatecall"}},"predictSafeAddress(address,address,bytes,bytes32,bytes)":{"details":"factoryInitializer is expected to be: abi.encodeCall(Safe7579Launchpad.preValidationSetup, (initHash, to, callData));"},"setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))":{"params":{"initData":"initData to initialize the Safe and Safe7579 Adapter"}},"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"params":{"missingAccountFunds":"amount of gas that has to be paid","userOp":"EntryPoint v0.7 userOp.","userOpHash":"hash of userOp"},"returns":{"validationData":"4337 packed validation data returned by the validator module"}}},"version":1},"userdoc":{"kind":"user","methods":{"addSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)":{"notice":"This function allows existing safe accounts to add the Safe7579 adapter to their account"},"hash((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))":{"notice":"Create unique InitData hash. Using all params but excluding data.callData from hash"},"initSafe7579(address,(address,bytes)[],(address,bytes)[],(address,bytes)[],address[],uint8)":{"notice":"This function is intended to be delegatecalled by the ISafe.setup function. It configures the Safe7579 for the user for all module types except validators, which were initialized in the validateUserOp function."},"preValidationSetup(bytes32,address,bytes)":{"notice":"SafeProxyFactory will create a SafeProxy and using this contract as the singleton implementation and call this function to initialize the account. will write initHash into SafeProxy storage"},"predictSafeAddress(address,address,bytes,bytes32,bytes)":{"notice":"Helper function that can be used offchain to predict the counterfactual Safe address."},"setupSafe((address,address[],uint256,address,bytes,address,(address,bytes)[],bytes))":{"notice":"During the execution phase of ERC4337, this function upgrades the SafeProxy to the actual SafeSingleton implementation. Subsequently, it invokes the ISafe.setup() function to initialize the Safe Account. The setup() function should ensure the completion of Safe7579 Adapter initialization with InitData.setupTo as address(this) and InitData.setupData encoding the call to this.initSafe7579(). SafeProxy.setup() delegatecalls this function to install executors, fallbacks, hooks, and registry configurations on the Safe7579 adapter. As this occurs in the ERC4337 execution phase, storage restrictions are not applicable."},"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"notice":"Upon creation of SafeProxy by SafeProxyFactory, EntryPoint invokes this function to verify the transaction. It ensures that only this.setupSafe() can be called by EntryPoint during execution. The function validates the hash of InitData in userOp.callData against the hash stored in preValidationSetup. This function abides by ERC4337 storage restrictions, allowing Safe7579 adapter initialization only in Validation Modules compliant with 4337. It installs validators from InitData onto the Safe7579 adapter for the account. When called by EP, the SafeProxy singleton address remains unupgraded to SafeSingleton, preventing execTransactionFromModule by Safe7579 Adapter. Initialization of Validator Modules is achieved through a direct call to onInstall(). This delegatecalled function initializes the Validator Module with the correct msg.sender. Once all validator modules are set up, they can be used to validate the userOp. Parameters include userOp (EntryPoint v0.7 userOp), userOpHash, and missingAccountFunds representing the gas payment required."}},"version":1}},"settings":{"remappings":["@ERC4337/=node_modules/@ERC4337/","@gnosis.pm/=node_modules/@gnosis.pm/","@matterlabs/zksync-contracts/l2/contracts/=src/libraries/","@openzeppelin/=node_modules/@openzeppelin/","@prb/math/=node_modules/@prb/math/src/","@rhinestone/=node_modules/@rhinestone/","@safe-global/=node_modules/@safe-global/","@zk-email/contracts/=node_modules/@zk-email/contracts/","@zk-email/ether-email-auth-contracts/=node_modules/@zk-email/ether-email-auth-contracts/","ExcessivelySafeCall/=node_modules/excessively-safe-call/src/","account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/","account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/","ds-test/=node_modules/ds-test/src/","erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/","erc7579/interfaces/=node_modules/@rhinestone/modulekit/src/accounts/common/interfaces/","excessively-safe-call/=node_modules/excessively-safe-call/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","kernel/=node_modules/@zerodev/kernel/src/","module-bases/=node_modules/@rhinestone/module-bases/src/","modulekit/=node_modules/@rhinestone/modulekit/src/","safe7579/=node_modules/@rhinestone/safe7579/src/","sentinellist/=node_modules/@rhinestone/sentinellist/src/","solady/=node_modules/solady/src/","solarray/=node_modules/solarray/src/","solidity-stringutils/=node_modules/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@rhinestone/modulekit/src/accounts/safe/interfaces/ISafe7579Launchpad.sol":"ISafe7579Launchpad"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol":{"keccak256":"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6","urls":["bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e","dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"],"license":"GPL-3.0"},"node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol":{"keccak256":"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b","urls":["bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc","dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"],"license":"GPL-3.0"},"node_modules/@ERC4337/account-abstraction/contracts/interfaces/IAccount.sol":{"keccak256":"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78","urls":["bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020","dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP"],"license":"GPL-3.0"},"node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"node_modules/@rhinestone/modulekit/src/accounts/common/lib/ModeLib.sol":{"keccak256":"0x11b48cd992efe381edabe7fd70b8e9dc61e4eae683c696c44f37b625582d712a","urls":["bzz-raw://5ba56d9bdba0f616da1728ceb19e4f34a3c085f46bfae413e297ab664d9a46e9","dweb:/ipfs/QmbSXxis2vsCHupcBHv6hj5YHcqdQcrcmT73fNSqxrmGmN"],"license":"GPL-3.0"},"node_modules/@rhinestone/modulekit/src/accounts/safe/interfaces/IERC7484.sol":{"keccak256":"0xacf332c3c672c5c1947a7a7c39fca446e0ba64f2ac0bfc5bcbf97d77e34427b3","urls":["bzz-raw://52b112abaab9ee6c56ee9fba5d0bb7c6abab9dbd982d73c862190505a5902f41","dweb:/ipfs/QmbMc8vC22e6VptN93uhWzwPzfQKP4YPxF8cenbyq6pgwh"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/safe/interfaces/IERC7579Account.sol":{"keccak256":"0x32647b05e94b0557537cdf7edc2c9bc1815aa8f0c2b9470f4db2e29e92ab900c","urls":["bzz-raw://47bb8a7fca994d3d28dab436286bdc09775b3f11e7b1a41603b5cba3b4a814f3","dweb:/ipfs/QmSJtdJtdf7ExceoCxtfZf69kHP5u7D2amqEAV4LcSQCHX"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/safe/interfaces/ISafe7579.sol":{"keccak256":"0x65ef20c762c094070cfde8ca51953a6d34c96f85d110aa669e9ef69c8832d5e0","urls":["bzz-raw://22a4f39137373d1cbc0a54cbcfd5e718dd43167add81484e72dc85bb0ed66a60","dweb:/ipfs/QmbLZhWyJFdLBezGefuuh6TfXnjqjcbEvJeezLFMDB1Hme"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/safe/interfaces/ISafe7579Launchpad.sol":{"keccak256":"0xe90a3d78dd4f8983a7835d176305767f24a4ad237941ffb1625407f7c021d1c7","urls":["bzz-raw://48d12766a997aad0bdbf40cdd49756dc4c8e5d91b2fbd3b50a3bde7a9c9a6248","dweb:/ipfs/QmQZH5o2m1PXJ1vUqVZogm9wf18xkWhhbV9dNPZArhGoQB"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/safe/interfaces/ISafeOp.sol":{"keccak256":"0xbab5eac7ab373dbd3b74d8aac065bc3f6986b167e10493475f8c6928b86c5901","urls":["bzz-raw://f83e8024578281f8041529206bcf44986df935cb04a7e21bcf2bd52146f665ab","dweb:/ipfs/QmVqEQdbeHzcZ6XSLY685KieU2yFkzdgfqHXeef6xSxy5u"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/safe/types/DataTypes.sol":{"keccak256":"0x01c25fcd1319c086c59bf4fe694b2013a09910ae981bec97d7bbc78932497ca3","urls":["bzz-raw://c0e8a519326d00db216249c463ba8828632c15126b7ca5a52298b09e5a462d1f","dweb:/ipfs/QmTDQJghirhS25hh9Ub4VVaX8cTi4GtPT6sDZq6cABUwuY"],"license":"MIT"}},"version":1},"id":129}