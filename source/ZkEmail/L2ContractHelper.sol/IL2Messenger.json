{"abi":[{"type":"function","name":"sendToL1","inputs":[{"name":"_message","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"sendToL1(bytes)":"62f84b24"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"sendToL1\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Matter Labs\",\"custom:security-contact\":\"security@matterlabs.dev\",\"details\":\"by default ZkSync can send fixed-length messages on L1. A fixed length message has 4 parameters `senderAddress`, `isService`, `key`, `value`, the first one is taken from the context, the other three are chosen by the sender.To send a variable-length message we use this trick: - This system contract accepts an arbitrary length message and sends a fixed length message with parameters `senderAddress == this`, `isService == true`, `key == msg.sender`, `value == keccak256(message)`. - The contract on L1 accepts all sent messages and if the message came from this system contract it requires that the preimage of `value` be provided.\",\"kind\":\"dev\",\"methods\":{\"sendToL1(bytes)\":{\"params\":{\"_message\":\"The variable length message to be sent to L1.\"},\"returns\":{\"_0\":\"Returns the keccak256 hashed value of the message.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"sendToL1(bytes)\":{\"notice\":\"Sends an arbitrary length message to L1.\"}},\"notice\":\"Smart contract for sending arbitrary length messages to L1\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/L2ContractHelper.sol\":\"IL2Messenger\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC4337/=node_modules/@ERC4337/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@matterlabs/zksync-contracts/l2/contracts/=src/libraries/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/math/=node_modules/@prb/math/src/\",\":@rhinestone/=node_modules/@rhinestone/\",\":@safe-global/=node_modules/@safe-global/\",\":@zk-email/contracts/=node_modules/@zk-email/contracts/\",\":@zk-email/ether-email-auth-contracts/=node_modules/@zk-email/ether-email-auth-contracts/\",\":ExcessivelySafeCall/=node_modules/excessively-safe-call/src/\",\":account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":erc7579/interfaces/=node_modules/@rhinestone/modulekit/src/accounts/common/interfaces/\",\":excessively-safe-call/=node_modules/excessively-safe-call/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":kernel/=node_modules/@zerodev/kernel/src/\",\":module-bases/=node_modules/@rhinestone/module-bases/src/\",\":modulekit/=node_modules/@rhinestone/modulekit/src/\",\":safe7579/=node_modules/@rhinestone/safe7579/src/\",\":sentinellist/=node_modules/@rhinestone/sentinellist/src/\",\":solady/=node_modules/solady/src/\",\":solarray/=node_modules/solarray/src/\",\":solidity-stringutils/=node_modules/solidity-stringutils/\"]},\"sources\":{\"src/libraries/L2ContractHelper.sol\":{\"keccak256\":\"0xb7a2380e8c63b57bcdfb200db0c710148a42b887d891de880743d630332f352e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4853bd0fb4e9cb5d73c9ee2be2dc5b04033ed7994fbd2aee9f45a35837c4caf0\",\"dweb:/ipfs/QmZwyC62GP2xFn37wyvaYu8q7TDb43z8h8pdMHtmBkth8b\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"_message","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"sendToL1","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]}],"devdoc":{"kind":"dev","methods":{"sendToL1(bytes)":{"params":{"_message":"The variable length message to be sent to L1."},"returns":{"_0":"Returns the keccak256 hashed value of the message."}}},"version":1},"userdoc":{"kind":"user","methods":{"sendToL1(bytes)":{"notice":"Sends an arbitrary length message to L1."}},"version":1}},"settings":{"remappings":["@ERC4337/=node_modules/@ERC4337/","@gnosis.pm/=node_modules/@gnosis.pm/","@matterlabs/zksync-contracts/l2/contracts/=src/libraries/","@openzeppelin/=node_modules/@openzeppelin/","@prb/math/=node_modules/@prb/math/src/","@rhinestone/=node_modules/@rhinestone/","@safe-global/=node_modules/@safe-global/","@zk-email/contracts/=node_modules/@zk-email/contracts/","@zk-email/ether-email-auth-contracts/=node_modules/@zk-email/ether-email-auth-contracts/","ExcessivelySafeCall/=node_modules/excessively-safe-call/src/","account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/","account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/","ds-test/=node_modules/ds-test/src/","erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/","erc7579/interfaces/=node_modules/@rhinestone/modulekit/src/accounts/common/interfaces/","excessively-safe-call/=node_modules/excessively-safe-call/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","kernel/=node_modules/@zerodev/kernel/src/","module-bases/=node_modules/@rhinestone/module-bases/src/","modulekit/=node_modules/@rhinestone/modulekit/src/","safe7579/=node_modules/@rhinestone/safe7579/src/","sentinellist/=node_modules/@rhinestone/sentinellist/src/","solady/=node_modules/solady/src/","solarray/=node_modules/solarray/src/","solidity-stringutils/=node_modules/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/L2ContractHelper.sol":"IL2Messenger"},"evmVersion":"cancun","libraries":{}},"sources":{"src/libraries/L2ContractHelper.sol":{"keccak256":"0xb7a2380e8c63b57bcdfb200db0c710148a42b887d891de880743d630332f352e","urls":["bzz-raw://4853bd0fb4e9cb5d73c9ee2be2dc5b04033ed7994fbd2aee9f45a35837c4caf0","dweb:/ipfs/QmZwyC62GP2xFn37wyvaYu8q7TDb43z8h8pdMHtmBkth8b"],"license":"MIT"}},"version":1},"id":297}