{"abi":[{"type":"function","name":"accountId","inputs":[],"outputs":[{"name":"accountImplementationId","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"execute","inputs":[{"name":"mode","type":"bytes32","internalType":"ExecMode"},{"name":"executionCalldata","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"executeFromExecutor","inputs":[{"name":"mode","type":"bytes32","internalType":"ExecMode"},{"name":"executionCalldata","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"payable"},{"type":"function","name":"installModule","inputs":[{"name":"moduleTypeId","type":"uint256","internalType":"uint256"},{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"isModuleInstalled","inputs":[{"name":"moduleTypeId","type":"uint256","internalType":"uint256"},{"name":"module","type":"address","internalType":"address"},{"name":"additionalContext","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isValidSignature","inputs":[{"name":"hash","type":"bytes32","internalType":"bytes32"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"supportsExecutionMode","inputs":[{"name":"encodedMode","type":"bytes32","internalType":"ExecMode"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"supportsModule","inputs":[{"name":"moduleTypeId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"uninstallModule","inputs":[{"name":"moduleTypeId","type":"uint256","internalType":"uint256"},{"name":"module","type":"address","internalType":"address"},{"name":"deInitData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"event","name":"ModuleInstalled","inputs":[{"name":"moduleTypeId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"module","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ModuleUninstalled","inputs":[{"name":"moduleTypeId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"module","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accountId()":"9cfd7cff","execute(bytes32,bytes)":"e9ae5c53","executeFromExecutor(bytes32,bytes)":"d691c964","installModule(uint256,address,bytes)":"9517e29f","isModuleInstalled(uint256,address,bytes)":"112d3a7d","isValidSignature(bytes32,bytes)":"1626ba7e","supportsExecutionMode(bytes32)":"d03c7914","supportsModule(uint256)":"f2dc691d","uninstallModule(uint256,address,bytes)":"a71763a8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleInstalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleUninstalled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"accountImplementationId\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ExecMode\",\"name\":\"mode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"executionCalldata\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ExecMode\",\"name\":\"mode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"executionCalldata\",\"type\":\"bytes\"}],\"name\":\"executeFromExecutor\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"name\":\"installModule\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalContext\",\"type\":\"bytes\"}],\"name\":\"isModuleInstalled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ExecMode\",\"name\":\"encodedMode\",\"type\":\"bytes32\"}],\"name\":\"supportsExecutionMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"}],\"name\":\"supportsModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"deInitData\",\"type\":\"bytes\"}],\"name\":\"uninstallModule\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accountId()\":{\"details\":\"Returns the account id of the smart account\",\"returns\":{\"accountImplementationId\":\"the account id of the smart account the accountId should be structured like so:        \\\"vendorname.accountname.semver\\\"\"}},\"execute(bytes32,bytes)\":{\"details\":\"Executes a transaction on behalf of the account.         This function is intended to be called by ERC-4337 EntryPoint.solEnsure adequate authorization control: i.e. onlyEntryPointOrSelfMSA MUST implement this function signature. If a mode is requested that is not supported by the Account, it MUST revert\",\"params\":{\"executionCalldata\":\"The encoded execution call data\",\"mode\":\"The encoded execution mode of the transaction. See ModeLib.sol for details\"}},\"executeFromExecutor(bytes32,bytes)\":{\"details\":\"Executes a transaction on behalf of the account.         This function is intended to be called by Executor ModulesEnsure adequate authorization control: i.e. onlyExecutorModuleMSA MUST implement this function signature. If a mode is requested that is not supported by the Account, it MUST revert\",\"params\":{\"executionCalldata\":\"The encoded execution call data\",\"mode\":\"The encoded execution mode of the transaction. See ModeLib.sol for details\"}},\"installModule(uint256,address,bytes)\":{\"details\":\"installs a Module of a certain type on the smart accountImplement Authorization control of your choosing\",\"params\":{\"initData\":\"arbitrary data that may be required on the module during `onInstall` initialization.\",\"module\":\"the module address\",\"moduleTypeId\":\"the module type ID according the ERC-7579 spec\"}},\"isModuleInstalled(uint256,address,bytes)\":{\"params\":{\"additionalContext\":\"additional context data that the smart account may interpret to                          identify conditions under which the module is installed.                          usually this is not necessary, but for some special hooks that                          are stored in mappings, this param might be needed\",\"module\":\"the module address\",\"moduleTypeId\":\"the module type ID according the ERC-7579 spec      Note: keep in mind that some contracts can be multiple module types at the same time. It            thus may be necessary to query multiple module types\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"ERC-1271 isValidSignature         This function is intended to be used to validate a smart account signature and may forward the call to a validator module\",\"params\":{\"data\":\"The data that is signed\",\"hash\":\"The hash of the data that is signed\"}},\"supportsExecutionMode(bytes32)\":{\"params\":{\"encodedMode\":\"the encoded mode\"}},\"supportsModule(uint256)\":{\"params\":{\"moduleTypeId\":\"the module type ID according the ERC-7579 spec\"}},\"uninstallModule(uint256,address,bytes)\":{\"details\":\"uninstalls a Module of a certain type on the smart accountImplement Authorization control of your choosing\",\"params\":{\"deInitData\":\"arbitrary data that may be required on the module during `onUninstall` de-initialization.\",\"module\":\"the module address\",\"moduleTypeId\":\"the module type ID according the ERC-7579 spec\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isModuleInstalled(uint256,address,bytes)\":{\"notice\":\"Function to check if the account has a certain module installed\"},\"supportsExecutionMode(bytes32)\":{\"notice\":\"Function to check if the account supports a certain CallType or ExecType (see ModeLib.sol)\"},\"supportsModule(uint256)\":{\"notice\":\"Function to check if the account supports installation of a certain module type Id\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IERC7579Account.sol\":\"IERC7579Account\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC4337/=node_modules/@ERC4337/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@matterlabs/zksync-contracts/l2/contracts/=src/libraries/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/math/=node_modules/@prb/math/src/\",\":@rhinestone/=node_modules/@rhinestone/\",\":@safe-global/=node_modules/@safe-global/\",\":@zk-email/contracts/=node_modules/@zk-email/contracts/\",\":@zk-email/ether-email-auth-contracts/=node_modules/@zk-email/ether-email-auth-contracts/\",\":ExcessivelySafeCall/=node_modules/excessively-safe-call/src/\",\":account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":erc7579/interfaces/=node_modules/@rhinestone/modulekit/src/accounts/common/interfaces/\",\":excessively-safe-call/=node_modules/excessively-safe-call/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":kernel/=node_modules/@zerodev/kernel/src/\",\":module-bases/=node_modules/@rhinestone/module-bases/src/\",\":modulekit/=node_modules/@rhinestone/modulekit/src/\",\":safe7579/=node_modules/@rhinestone/safe7579/src/\",\":sentinellist/=node_modules/@rhinestone/sentinellist/src/\",\":solady/=node_modules/solady/src/\",\":solarray/=node_modules/solarray/src/\",\":solidity-stringutils/=node_modules/solidity-stringutils/\"]},\"sources\":{\"node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IERC7579Account.sol\":{\"keccak256\":\"0xe1f8633b798b52b860bc9d9b53bba51df98d7ab1f8d3a84764c895c64668d88a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b281bf2c2abdf0c37d58c95750fd0830bd21a9f0964bac445c7da8bb7dddcc22\",\"dweb:/ipfs/QmR5NYRUfRgS6UY5rUEiF6aptFdem9TyFTySfNe64sm7W4\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/lib/ExecLib.sol\":{\"keccak256\":\"0x3de3d5b0dda068cefbf37bddb257bed24d61e6c9a03931616ea9308fc650ec75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e106b2b433f226b455a511b03f54b993ad8b15697b2096016908171ff13db54e\",\"dweb:/ipfs/QmZ5J3cUFhwnRgTZajdQ75dmkm9QhA64WTvoqLb9AsAofD\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/types/Constants.sol\":{\"keccak256\":\"0xb384c482c30fa887c4eb5637266e11992ba5dd8971b51005aecbd48cf7af1e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ffb786e664749a4904a75543c1f2f8f2ca2de11a3e83a0ab08d1e3ebf024366\",\"dweb:/ipfs/QmYq2YiEcYDNCVoY1iGeRKFce6Bdebjc4c2tG6vnp51Tk8\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/types/Structs.sol\":{\"keccak256\":\"0x6090c666443a4c66faf1ff73aceca8d4ca794583d39f572622978513599e50a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81b0d0aaf922fe6cb3e9a3fce10366c58f9e980bc3407bec39cc9e66180974e7\",\"dweb:/ipfs/QmYJHy9dQTg5Epm7eRuafaQFu8z7Pg3aGPoemHJTAqRreB\"]},\"node_modules/@rhinestone/modulekit/src/accounts/kernel/types/Types.sol\":{\"keccak256\":\"0x6c7dc1dade8c24d366bf8f5a7a378c54a9383202a117454fc6d1642f58236b82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71573bc69c15a77afff7d15eac274553c26dd88452755d0ef80131936baf27b5\",\"dweb:/ipfs/QmQm9o5Dga2PVHcXuqEqB7nG8dwGnU3y9KCs8BuCQGp1U9\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256","indexed":false},{"internalType":"address","name":"module","type":"address","indexed":false}],"type":"event","name":"ModuleInstalled","anonymous":false},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256","indexed":false},{"internalType":"address","name":"module","type":"address","indexed":false}],"type":"event","name":"ModuleUninstalled","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"accountId","outputs":[{"internalType":"string","name":"accountImplementationId","type":"string"}]},{"inputs":[{"internalType":"ExecMode","name":"mode","type":"bytes32"},{"internalType":"bytes","name":"executionCalldata","type":"bytes"}],"stateMutability":"payable","type":"function","name":"execute"},{"inputs":[{"internalType":"ExecMode","name":"mode","type":"bytes32"},{"internalType":"bytes","name":"executionCalldata","type":"bytes"}],"stateMutability":"payable","type":"function","name":"executeFromExecutor","outputs":[{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}]},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"},{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}],"stateMutability":"payable","type":"function","name":"installModule"},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"},{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"additionalContext","type":"bytes"}],"stateMutability":"view","type":"function","name":"isModuleInstalled","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"ExecMode","name":"encodedMode","type":"bytes32"}],"stateMutability":"view","type":"function","name":"supportsExecutionMode","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"}],"stateMutability":"view","type":"function","name":"supportsModule","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"},{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"deInitData","type":"bytes"}],"stateMutability":"payable","type":"function","name":"uninstallModule"}],"devdoc":{"kind":"dev","methods":{"accountId()":{"details":"Returns the account id of the smart account","returns":{"accountImplementationId":"the account id of the smart account the accountId should be structured like so:        \"vendorname.accountname.semver\""}},"execute(bytes32,bytes)":{"details":"Executes a transaction on behalf of the account.         This function is intended to be called by ERC-4337 EntryPoint.solEnsure adequate authorization control: i.e. onlyEntryPointOrSelfMSA MUST implement this function signature. If a mode is requested that is not supported by the Account, it MUST revert","params":{"executionCalldata":"The encoded execution call data","mode":"The encoded execution mode of the transaction. See ModeLib.sol for details"}},"executeFromExecutor(bytes32,bytes)":{"details":"Executes a transaction on behalf of the account.         This function is intended to be called by Executor ModulesEnsure adequate authorization control: i.e. onlyExecutorModuleMSA MUST implement this function signature. If a mode is requested that is not supported by the Account, it MUST revert","params":{"executionCalldata":"The encoded execution call data","mode":"The encoded execution mode of the transaction. See ModeLib.sol for details"}},"installModule(uint256,address,bytes)":{"details":"installs a Module of a certain type on the smart accountImplement Authorization control of your choosing","params":{"initData":"arbitrary data that may be required on the module during `onInstall` initialization.","module":"the module address","moduleTypeId":"the module type ID according the ERC-7579 spec"}},"isModuleInstalled(uint256,address,bytes)":{"params":{"additionalContext":"additional context data that the smart account may interpret to                          identify conditions under which the module is installed.                          usually this is not necessary, but for some special hooks that                          are stored in mappings, this param might be needed","module":"the module address","moduleTypeId":"the module type ID according the ERC-7579 spec      Note: keep in mind that some contracts can be multiple module types at the same time. It            thus may be necessary to query multiple module types"}},"isValidSignature(bytes32,bytes)":{"details":"ERC-1271 isValidSignature         This function is intended to be used to validate a smart account signature and may forward the call to a validator module","params":{"data":"The data that is signed","hash":"The hash of the data that is signed"}},"supportsExecutionMode(bytes32)":{"params":{"encodedMode":"the encoded mode"}},"supportsModule(uint256)":{"params":{"moduleTypeId":"the module type ID according the ERC-7579 spec"}},"uninstallModule(uint256,address,bytes)":{"details":"uninstalls a Module of a certain type on the smart accountImplement Authorization control of your choosing","params":{"deInitData":"arbitrary data that may be required on the module during `onUninstall` de-initialization.","module":"the module address","moduleTypeId":"the module type ID according the ERC-7579 spec"}}},"version":1},"userdoc":{"kind":"user","methods":{"isModuleInstalled(uint256,address,bytes)":{"notice":"Function to check if the account has a certain module installed"},"supportsExecutionMode(bytes32)":{"notice":"Function to check if the account supports a certain CallType or ExecType (see ModeLib.sol)"},"supportsModule(uint256)":{"notice":"Function to check if the account supports installation of a certain module type Id"}},"version":1}},"settings":{"remappings":["@ERC4337/=node_modules/@ERC4337/","@gnosis.pm/=node_modules/@gnosis.pm/","@matterlabs/zksync-contracts/l2/contracts/=src/libraries/","@openzeppelin/=node_modules/@openzeppelin/","@prb/math/=node_modules/@prb/math/src/","@rhinestone/=node_modules/@rhinestone/","@safe-global/=node_modules/@safe-global/","@zk-email/contracts/=node_modules/@zk-email/contracts/","@zk-email/ether-email-auth-contracts/=node_modules/@zk-email/ether-email-auth-contracts/","ExcessivelySafeCall/=node_modules/excessively-safe-call/src/","account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/","account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/","ds-test/=node_modules/ds-test/src/","erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/","erc7579/interfaces/=node_modules/@rhinestone/modulekit/src/accounts/common/interfaces/","excessively-safe-call/=node_modules/excessively-safe-call/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","kernel/=node_modules/@zerodev/kernel/src/","module-bases/=node_modules/@rhinestone/module-bases/src/","modulekit/=node_modules/@rhinestone/modulekit/src/","safe7579/=node_modules/@rhinestone/safe7579/src/","sentinellist/=node_modules/@rhinestone/sentinellist/src/","solady/=node_modules/solady/src/","solarray/=node_modules/solarray/src/","solidity-stringutils/=node_modules/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IERC7579Account.sol":"IERC7579Account"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol":{"keccak256":"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6","urls":["bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e","dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"],"license":"GPL-3.0"},"node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol":{"keccak256":"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b","urls":["bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc","dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"],"license":"GPL-3.0"},"node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/interfaces/IERC7579Account.sol":{"keccak256":"0xe1f8633b798b52b860bc9d9b53bba51df98d7ab1f8d3a84764c895c64668d88a","urls":["bzz-raw://b281bf2c2abdf0c37d58c95750fd0830bd21a9f0964bac445c7da8bb7dddcc22","dweb:/ipfs/QmR5NYRUfRgS6UY5rUEiF6aptFdem9TyFTySfNe64sm7W4"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/lib/ExecLib.sol":{"keccak256":"0x3de3d5b0dda068cefbf37bddb257bed24d61e6c9a03931616ea9308fc650ec75","urls":["bzz-raw://e106b2b433f226b455a511b03f54b993ad8b15697b2096016908171ff13db54e","dweb:/ipfs/QmZ5J3cUFhwnRgTZajdQ75dmkm9QhA64WTvoqLb9AsAofD"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/types/Constants.sol":{"keccak256":"0xb384c482c30fa887c4eb5637266e11992ba5dd8971b51005aecbd48cf7af1e02","urls":["bzz-raw://1ffb786e664749a4904a75543c1f2f8f2ca2de11a3e83a0ab08d1e3ebf024366","dweb:/ipfs/QmYq2YiEcYDNCVoY1iGeRKFce6Bdebjc4c2tG6vnp51Tk8"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/types/Structs.sol":{"keccak256":"0x6090c666443a4c66faf1ff73aceca8d4ca794583d39f572622978513599e50a0","urls":["bzz-raw://81b0d0aaf922fe6cb3e9a3fce10366c58f9e980bc3407bec39cc9e66180974e7","dweb:/ipfs/QmYJHy9dQTg5Epm7eRuafaQFu8z7Pg3aGPoemHJTAqRreB"],"license":"MIT"},"node_modules/@rhinestone/modulekit/src/accounts/kernel/types/Types.sol":{"keccak256":"0x6c7dc1dade8c24d366bf8f5a7a378c54a9383202a117454fc6d1642f58236b82","urls":["bzz-raw://71573bc69c15a77afff7d15eac274553c26dd88452755d0ef80131936baf27b5","dweb:/ipfs/QmQm9o5Dga2PVHcXuqEqB7nG8dwGnU3y9KCs8BuCQGp1U9"],"license":"MIT"}},"version":1},"id":111}